<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jinfei.jfmm.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.jinfei.jfmm.model.User">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="dept_id" property="deptId" jdbcType="VARCHAR"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="phonenumber" property="phonenumber" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="CHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="CHAR"/>
        <result column="login_ip" property="loginIp" jdbcType="VARCHAR"/>
        <result column="login_date" property="loginDate" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_id, dept_id, login_name, user_name, phonenumber, password, salt, role_id, status, 
    del_flag, login_ip, login_date, create_by, create_time, update_by, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from s_user
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from s_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.jinfei.jfmm.model.User">
    insert into s_user (user_id, dept_id, login_name, 
      user_name, phonenumber, password, 
      salt, role_id, status, 
      del_flag, login_ip, login_date, 
      create_by, create_time, update_by, 
      update_time)
    values (#{userId,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR},
      #{userName,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{delFlag,jdbcType=CHAR}, #{loginIp,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.jinfei.jfmm.model.User">
        insert into s_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="loginName != null">
                login_name,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="phonenumber != null">
                phonenumber,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="loginIp != null">
                login_ip,
            </if>
            <if test="loginDate != null">
                login_date,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="phonenumber != null">
                #{phonenumber,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=CHAR},
            </if>
            <if test="loginIp != null">
                #{loginIp,jdbcType=VARCHAR},
            </if>
            <if test="loginDate != null">
                #{loginDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jinfei.jfmm.model.User">
        update s_user
        <set>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="phonenumber != null">
                phonenumber = #{phonenumber,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
            <if test="loginIp != null">
                login_ip = #{loginIp,jdbcType=VARCHAR},
            </if>
            <if test="loginDate != null">
                login_date = #{loginDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jinfei.jfmm.model.User">
    update s_user
    set dept_id = #{deptId,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
    <update id="setLoginLastTime">
    update s_user
    set
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
    <select id="selectUser" resultMap="BaseResultMap" parameterType="String">
    select * from s_user where login_name = #{loginName}
  </select>
    <select id="selectUserList" resultMap="BaseResultMap" parameterType="com.jinfei.jfmm.model.User">
        select * from s_user
        <where>
            <if test="loginName != null and loginName != ''">
                login_name like CONCAT('%',#{loginName},'%')
            </if>
            <if test="userName != null and userName != ''">
                user_name like CONCAT('%',#{userName},'%')
            </if>
        </where>
    </select>
    <select id="checkLoginName" resultType="java.lang.Boolean">
        select count(0) from s_user
        <where>
            <if test="loginName!=null and loginName!=''">
                AND login_name = #{loginName}
            </if>
            <if test=" userId != null and userId != '' ">
                AND user_id != #{userId}
            </if>
        </where>
    </select>
    <select id="getGroupUser" resultType="java.lang.String">
        select login_name from s_user
        where role_id = #{role_id}
    </select>
    <select id="getGroupUserKey" resultType="java.lang.String">
      SELECT
	    login_name
      FROM
	    s_user
	  LEFT JOIN s_role ON  FIND_IN_SET(s_role.role_id,s_user.role_id )
      WHERE
	    s_role.role_key = #{key}
    </select>
</mapper>